{"version":3,"sources":["serviceWorker.js","components/qrcode.jsx","utils/firebaseUtils.js","components/navigation/navigation.jsx","components/navigation/link.jsx","components/header/guest.jsx","container/guest.jsx","components/about/about.jsx","services/firebaseService.js","components/listTest/index.jsx","components/box/boxPost.jsx","components/box/cardPost.jsx","components/guest/index.jsx","route/route.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","QrCode","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","delay","result","handleScan","bind","assertThisInitialized","data","setState","err","react_default","a","createElement","lib_default","onError","handleError","onScan","style","width","Component","firebaseDatabase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","Navigation","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","children","LinkNavigation","Link","to","GuestHeader","backgroundImage","Guest","navigation","navigation_link","guest","About","pushData","node","objToSubmit","ref","push","key","set","remove","container_guest","FirebaseService","getDataList","nodePath","callback","size","arguments","length","undefined","query","limitToLast","on","dataSnapshot","items","forEach","childSnapshot","item","val","ListUser","getUsers","_this2","dataReceived","map","index","name","Box","Card","title","subtitle","author","date","Initial","getPosts","boxPost","post","cardPost","Router","BrowserRouter","Switch","Route","path","exact","component","ReactDOM","render","route","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2d48a4d0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport QrReader from \"react-qr-reader\";\r\n\r\nclass QrCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      delay: 300,\r\n      result: \"No result\"\r\n    };\r\n    this.handleScan = this.handleScan.bind(this);\r\n  }\r\n\r\n  handleScan(data) {\r\n    if (data) {\r\n      this.setState({\r\n        result: data\r\n      });\r\n    }\r\n  }\r\n\r\n  handleError(err) {\r\n    console.error(err);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <QrReader\r\n          delay={this.state.delay}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <p>{this.state.result}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCode;\r\n","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAf2JprBIZJW97Ef6mVwQGWgWLlzymJBLc\",\r\n    authDomain: \"plusevent-d204d.firebaseapp.com\",\r\n    databaseURL: \"https://plusevent-d204d.firebaseio.com\",\r\n    projectId: \"plusevent-d204d\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"631436429012\"\r\n};\r\n\r\nexport const firebaseImpl = firebase.initializeApp(config);\r\nexport const firebaseDatabase = firebase.database();","import React, {Component} from 'react'\r\n\r\nclass Navigation extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"mainNav\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"/\">+Project</a>\r\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        Menu\r\n                        <i className=\"fas fa-bars\"></i>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            { this.props.children }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass LinkNavigation extends Component {\r\n    render(){\r\n        return (\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={ this.props.href }> { this.props.children } </Link>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LinkNavigation","import React, {Component} from 'react'\r\n\r\nclass GuestHeader extends Component {\r\n    render(){\r\n        return (\r\n            <header className=\"masthead\" style={\r\n                {\r\n                    backgroundImage: \"url('img/Destaque _+_.png')\"\r\n                }\r\n            }>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-10 mx-auto\">\r\n                            <div className=\"site-heading\">\r\n                                <h1>Projetos</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GuestHeader","import React, {Component} from 'react'\r\n\r\nimport Navigation from '../components/navigation/navigation'\r\nimport LinkNavigation from '../components/navigation/link'\r\nimport GuestHeader from '../components/header/guest'\r\n\r\nclass Guest extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navigation>\r\n                    <LinkNavigation href=\"/PWA-QrCode/qrcode\"> QrCode </LinkNavigation>\r\n                    <LinkNavigation href=\"/PWA-QrCode/list\"> Lista </LinkNavigation>\r\n                </Navigation>\r\n                <GuestHeader/>\r\n                { this.props.children }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Guest","import React, { Component } from 'react';\r\n\r\nimport { firebaseDatabase } from '../../utils/firebaseUtils'\r\nimport './about.css';\r\nimport Guest from '../../container/guest'\r\n\r\nclass About extends Component {\r\n   constructor(props){\r\n      super(props)\r\n      this.pushData = this.pushData.bind(this)\r\n      this.remove = this.remove.bind(this)\r\n      /*\r\n      this.pushData('users', {\r\n         name: 'alan',\r\n         password: '68745985'\r\n      })\r\n      this.remove('-LYn-EB4LBXg-9I0YslU', 'users')\r\n      */\r\n   }\r\n\r\n   pushData = (node, objToSubmit) => {\r\n      const ref = firebaseDatabase.ref(node).push();\r\n      const id = firebaseDatabase.ref(node).push().key;\r\n      ref.set(objToSubmit);\r\n      return id;\r\n  };\r\n\r\n   remove = (id, node) => {\r\n      return firebaseDatabase.ref(node + '/' + id).remove();\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <Guest>\r\n            <p>\r\n               About\r\n            </p>\r\n         </Guest>\r\n      );\r\n   }\r\n}\r\nexport default About;","import {firebaseDatabase} from '../utils/firebaseUtils'\r\n\r\nexport default class FirebaseService {\r\n    static getDataList = (nodePath, callback, size = 10) => {\r\n\r\n        let query = firebaseDatabase.ref(nodePath).limitToLast(size)\r\n        query.on('value', dataSnapshot => {\r\n            let items = []\r\n            dataSnapshot.forEach(childSnapshot => {\r\n                let item = childSnapshot.val()\r\n                item['key'] = childSnapshot.key\r\n                items.push(item)\r\n            });\r\n            callback(items)\r\n        });\r\n\r\n        return query\r\n    };\r\n\r\n}","import React, {Component} from 'react'\r\nimport FirebaseService from '../../services/firebaseService'\r\n\r\nclass ListUser extends Component {\r\n    constructor(props){\r\n       super(props)\r\n       this.state = {\r\n           data: []\r\n       }\r\n       this.getUsers = this.getUsers.bind(this)\r\n\r\n       this.getUsers()\r\n    }\r\n\r\n    getUsers() {\r\n        FirebaseService.getDataList('users', (dataReceived) => this.setState({data: dataReceived}))\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n                <header className='App-header'>\r\n                    <ul>\r\n                        {\r\n                            this.state.data.map((item, index) => <li>\r\n                                { item.name }\r\n                            </li>)\r\n                        }\r\n                    </ul>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n }\r\n export default ListUser;","import React, {Component} from 'react'\r\n\r\n\r\nclass Box extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-8 col-md-10 mx-auto\">\r\n                        { this.props.children }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Box","import React, {Component} from 'react'\r\n\r\nclass Card extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"post-preview\">\r\n                <a href=\"post.html\">\r\n                    <h2 className=\"post-title\">\r\n                        { this.props.title }\r\n                    </h2>\r\n                    <h3 className=\"post-subtitle\">\r\n                        { this.props.subtitle }\r\n                    </h3>\r\n                </a>\r\n                <p className=\"post-meta\">\r\n                    Postado por <a href=\"#\">{ this.props.author }</a> em { this.props.date }\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card","import React, {Component} from 'react'\r\n\r\nimport FirebaseService from '../../services/firebaseService'\r\nimport Guest from '../../container/guest'\r\nimport Box from '../box/boxPost'\r\nimport Card from '../box/cardPost'\r\n\r\nclass Initial extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: []\r\n        }\r\n\r\n        this.getPosts = this.getPosts.bind(this)\r\n \r\n        this.getPosts()\r\n    }\r\n\r\n    getPosts() {\r\n        FirebaseService.getDataList('posts', (dataReceived) => {\r\n            this.setState({data: dataReceived})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Guest>\r\n                <Box>\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.state.data.map(\r\n                                (post, index) => \r\n                                <div key={index} className=\"col-md-6\">\r\n                                    <Card\r\n                                        title={post.title}\r\n                                        subtitle={ post.subtitle ? post.subtitle : '' }\r\n                                        author={post.author}\r\n                                        date={post.date}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </Box>\r\n            </Guest>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Initial","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport QrCode from '../components/qrcode'\r\nimport About from '../components/about/about'\r\nimport ListUser from '../components/listTest'\r\nimport Initial from '../components/guest'\r\nclass Router extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/PWA-QrCode/\" exact={true} component={Initial} />\r\n                <Route path=\"/PWA-QrCode/qrcode\" component={QrCode} />\r\n                <Route path=\"/PWA-QrCode/list\" component={ListUser} />\r\n                <Route path=\"/PWA-QrCode/about\" component={About} />\r\n                <Route path='*' component={Initial} />\r\n            </Switch>\r\n        </ BrowserRouter>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Router;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport Router from './route/route';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}